#!/bin/bash

CONFIG=/etc/varnish/default.vcl
DAEMON=/usr/sbin/varnishd

# Include varnish defaults if available
if [ -f /etc/default/varnish ] ; then
	. /etc/default/varnish 
fi

# If $DAEMON_OPTS is not set at all in /etc/default/varnish, use minimal useful
# defaults (Backend at localhost:8080, a common place to put a locally
# installed application server.)
DAEMON_OPTS=${DAEMON_OPTS:--b localhost}

VARNISH_BACKEND_IP=${VARNISH_BACKEND_IP:-127.0.0.1}
VARNISH_BACKEND_PORT=${VARNISH_BACKEND_PORT:-8080}

prepare_config() {
	# Create a backup of the configuration file
	# Since the test runs during the build process
	# it will have different ips for the backend and
	# we don't want to override the original configuration
	cp ${CONFIG} $1

	# Convert environment variables in the conf to fixed entries
	# http://stackoverflow.com/questions/21056450/how-to-inject-environment-variables-in-varnish-configuration
	for name in VARNISH_BACKEND_PORT VARNISH_BACKEND_IP
	do
    	eval value=\$$name
    	sed -i "s|\${${name}}|${value}|g" $1
	done
}

check_varnish_config() {
	prepare_config ${CONFIG}.1
	${DAEMON} ${DAEMON_OPTS} -f ${CONFIG}.1 -C -n /tmp > /dev/null
}

start_varnish() {
	prepare_config ${CONFIG}.2
	${DAEMON} -F -f ${CONFIG}.2 ${DAEMON_OPTS}
}

case "$1" in
    start)
    	start_varnish
    	;;
    check)
    	check_varnish_config
    	;;
esac